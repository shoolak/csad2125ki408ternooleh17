name: CI для C++ та Arduino

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  cpp-arduino-build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Забезпечити налаштування Arduino CLI (якщо ще не доступний на ранері)
      - name: Встановити Arduino CLI
        uses: arduino/setup-arduino-cli@v1
        with:
          version: '0.19.2'

      # Встановити CMake
      - name: Встановити CMake
        run: choco install cmake

      # Встановити платформу Arduino AVR
      - name: Встановити платформу Arduino AVR
        run: arduino-cli core install arduino:avr

      # Запустити CMake для конфігурації проєкту
      - name: Конфігурація CMake
        run: cmake -S Config -B Build
        shell: cmd

      # Зібрати проєкт за допомогою CMake
      - name: Збірка з CMake
        run: cmake --build build
        shell: cmd


        # Виконати тести
      - name: Run Tests
      run: |
        cd build
        ctest --output-on-failure --output-log test_results.txt || true
      shell: cmd

    # Перевірити вміст папки build
    - name: List build directory
      run: dir build
      shell: cmd

    # Переконатися, що результати існують
    - name: Ensure test results exist
      run: |
        if not exist build\test_results.txt echo "No test results" > build\test_results.txt
      shell: cmd

    # Завантажити артефакти збірки
    - name: Завантажити артефакти збірки
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: out/*
    
              # Архівувати результати тестів
    - name: Archive test results
      if: always()
      run: |
        move build\test_results.txt .
      shell: cmd

      # Завантажити зкомпільовані артефакти (клієнт та Arduino)
      - name: Завантажити артефакти збірки
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: out/*